name: Build Electron React

on:
  push:
    branches:
      - main
    paths:
      - 'electron_react/**'
      - '.github/workflows/build.yml'

permissions:
  contents: write

jobs:
  build:
    name: Build and analyze Electron React
    runs-on: windows-latest
    
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Install dependencies
        run: |
          cd electron_react
          npm install
      - name: Run lint
        run: |
          cd electron_react
          npm run lint
      - name: Build
        run: |
          cd electron_react
          npm run build
      - name: Electron Build
        run: |
          cd electron_react
          npm run electron-build
      - name: List Build Files
        run: |
          ls -la electron_react/dist-electron/
        shell: bash
      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: electron-build
          path: electron_react/dist-electron/*.exe
      - uses: SonarSource/sonarqube-scan-action@v5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        with:
          projectBaseDir: electron_react
        continue-on-error: true
      - name: Setup Git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git
      - name: Release
        run: |
          cd electron_react
          npm run release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Push changes
        run: |
          git push --follow-tags origin main
      - name: Create Release
        if: github.event_name == 'push' && contains(github.ref, 'refs/tags/')
        run: |
          gh release create ${{ github.ref_name }} --title "Release ${{ github.ref_name }}" --notes "Automated release"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Upload Release Assets
        if: github.event_name == 'push' && contains(github.ref, 'refs/tags/')
        run: |
          echo "Files in dist-electron:"
          find electron_react/dist-electron -name "*.exe" -type f
          gh release upload ${{ github.ref_name }} electron_react/dist-electron/*.exe --clobber
        shell: bash
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}